static BIG_N: Int = 35
static RANDOM_BOOLEAN: Boolean = false

fn main(): Unit
  let even_list = filter_even_numbers([Int](2 ,  4, 5))
  println(make_list([Boolean](false)))

fn make_list(n: [Boolean]): [Boolean]
  if true
    let list = [Boolean](false, true)
    n
  elif true
    let list = [Boolean](false, true)
    list
  else
    let list = [Boolean](false, true)
    list


fn is_greater(lhs: Int, rhs: Int): Boolean
  lhs > rhs

fn is_smaller(lhs: Int, rhs: Int): Boolean
  lhs < rhs

  inner()

  fn inner(): Boolean
    RANDOM_BOOLEAN

fn fibo(n: Int): Int
  if n == 0 or n == 1 or n < 0
    n
  else
    fibo(n - 1) + fibo(n - 2)

fn isSame(n: Int, m: Int): Boolean
  n == m

fn isSame(n: Boolean, m: Boolean): Boolean
  n == m

fn fibonacci(n: Int): [Int]
  let mut list = [Int](0, 1)

  for i = 2 to n
    list += list[i - 1] + list[i - 2]

  list


fn filter_even_numbers(list: [Int]): [Int]
  let mut new_list = [Int]()

  for i = 0 to len(list)
    if (list[i] % 2 == 0)
      new_list += list[i]

  new_list
