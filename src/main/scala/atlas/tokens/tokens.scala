package atlas
package tokens

sealed trait Token extends Product {
  def raw: String
  def pos: LinePos
}

case class Reserve(pos: LinePos, raw: String) extends Token
case class NewLine(pos: LinePos, raw: String) extends Token
case class Unknown(pos: LinePos, raw: String) extends Token
case class Comment(pos: LinePos, raw: String) extends Token
case class Integer(pos: LinePos, raw: String) extends Token
case class NamedId(pos: LinePos, raw: String) extends Token
case class WhiteSp(pos: LinePos, raw: String) extends Token

// The tokens below are currently generated by the lexer.
// This is why, as default, their lexemes are empty.
// However, future design considerations may allow these tokens
// to accept other lexemes (e.g. brackets for Indentations).

case class Indent(pos: LinePos, raw: String = "indent") extends Token
case class Dedent(pos: LinePos, raw: String = "dedent") extends Token
case class Badent(pos: LinePos, raw: String = "badent") extends Token
case class EOF(pos: LinePos, raw: String = "EOF") extends Token
